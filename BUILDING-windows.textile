*These steps will setup your development environment for Sonic Awe on Windows 7*

*1. Github*
Install git and send your github user name and public ssh-key to sonicawe@reep.se

---

*2. Prerequisites*
Sonic AWE is built with 32bit libraries for Windows.

*2.1. CUDA*
Download and install <a href="http://www.nvidia.com/object/cuda_get.html">cuda toolkit (and if needed, cuda dev driver) from nvidia</a>. Note that QT is 32bit, so the 32bit versions has to be used here as well. Win7 uses Vista variants.
Make sure these enviroment variables are set:
CUDA_BIN_PATH = c:\CUDA\bin
CUDA_LIB_PATH = c:\CUDA\lib
CUDA_INC_PATH = c:\CUDA\include
Please note that the installer sometimes messes up and sets paths to bin64 and lib64, eventho the 32bit version is installed. So check this manually!

*2.2 QT Toolkit*
Download and install Nokia __Qt for Open Source C++ development on Windows (VS2008)__. You will not need to build it yourself. Get it <a href="http://qt.nokia.com/downloads/windows-cpp-vs2008">here</a>. Make sure the path to the QT bin directory is added to the system paths. (Something like: C:\Qt\2009.04\qt\bin, depends on your version)

*2.3 LibSndFile, Boost, stdint.h, glew, glut portaudio*
Get them from ssh://git@jovia.net:2232/sonicawe-winlib.git.

*2.4 Visual Studio projects*
The repo contains .pro files for QT QMAKE. To create Visual Studio project files out of these you can 
follow these steps:
<pre>cd /path/to/sonic
cd gpumisc
qmake</pre>
This creates gpumisc.dsp, a Visual Studio file for old versions of Visual Studio. Open this file in Visual
Studio which should ask you to convert this to a newer version, say yes, save and close. You now have a
gpumisc.vcproj file as well, which is the file linked to by the Visual Studio solution at 
'/path/to/sonic/sonic.sln'. Do the same for sonicawe. Note that you need to redo these steps each time
a .pro file have changed. Also, project settings are managed through .pro files. Visual Studio project 
files should be regared as temporary files.

'enable-dsp-to-vcproj.sln' is needed to prevent Visual Studio from opening sonic.sln when you 
attempt to open gpumisc.dsp.

---

*3. Things to remember*
*3.1 pro-to-dsp-to-vcproj*
You need to redo step 2.4 each time a .pro file have changed.

*3.2 Optional - QT integration into Visual Studio*
Follow the link "here":http://qt.nokia.com/downloads/visual-studio-add-in to download, "here":http://qt.nokia.com/developer/faqs/what-is-the-visual-studio-add-in/view for a FAQ article regarding the plug-in, and "here":http://rajorshi.net/blog/2009/01/using-qt-with-msvc-express-2008/ for a tutorial on how to use it. Note that this doesn't work with the Express version!

---

*4. Packaging the application*
*4.1 Debug build*
To package a debug build of SonicAwe, copy the included libraries and the exe to the folder of your choice. Also include the VS runtime libraries msvcp90d.dll, msvcr90d.dll and the manifest file Microsoft.VC90.DebugCRT.manifest. These should be located in the folder "C:\program files\Microsoft Visual Studio 9.0\VC\redist\Debug_NonRedist\x86".
It should be a trivial task to put this behaviour into the project file but since paths may differ on different computers, this has not been done.

The following dlls should be included in the package:
<pre>cudart.dll
cufft.dll
glew32.dll
glut32.dll
libsndfile-1.dll
msvcp90d.dll
msvcr90d.dll
QtCored4.dll
QtGuid4.dll
QtOpenGLd4.dll
portaudio_x86.dll
</pre>
Also don't forget to include
<pre>spectrogram.frag
spectrogram.vert</pre>

*4.2 Release build*
The application is currently not in a state stable enough to run in release mode but the process is similar to the previously described debug mode.
