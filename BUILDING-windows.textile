*These steps will setup your development environment for Sonic Awe on Windows 7*

*1. Codaset*
Create an account at Codaset and send your Codaset user name (and public ssh-key if any) to sonicawe@reep.se

---

*2. Prerequisites*
Sonic AWE is built with 32bit libraries for Windows.

*2.1. CUDA*
Download and install <a href="http://www.nvidia.com/object/cuda_get.html">cuda toolkit (and if needed, cuda dev driver) from nvidia</a>. Note that QT is 32bit, so the 32bit versions has to be used here as well. Win7 uses Vista variants.
Make sure these enviroment variables are set:
CUDA_BIN_PATH = c:\CUDA\bin
CUDA_LIB_PATH = c:\CUDA\lib
CUDA_INC_PATH = c:\CUDA\include
Please note that the installer sometimes messes up and sets paths to bin64 and lib64, eventho the 32bit version is installed. So check this manually!

*2.2 QT Toolkit*
DO NOT DOWNLOAD __Qt SDK for Windows__. Instead download and install Nokia __Qt for Open Source C++ development on Windows (VS2008)__ from <a href="http://qt.nokia.com/downloads/windows-cpp-vs2008">here</a>. Make sure the path to the QT bin directory is added to the system paths. (Something like: C:\Qt\2009.04\qt\bin, or C:\QtSDK\Desktop\Qt\4.7.2\mingw\bin, depends on your version).
Set the environment variable QMAKESPEC to win32-msvc2008 depending on your version.

*2.3 LibSndFile, Boost, stdint.h, glew, glut portaudio*
Get them from ssh://git@jovia.net:2232/sonicawe-winlib.git. Make sure you put the 'sonicawe-winlib' directory next to the 'sonic' directory in step 3.1.

*2.4 Visual Studio*
Download the express version of Visual Studio 2008, Cuda doesn't work with 2010 or later.

*2.5 git*
Follow this guide
http://help.github.com/win-set-up-git/
and this
http://help.github.com/working-with-key-passphrases/
Then send your public public ssh-key to sonicawe@reep.se.

*2.6 NSIS*
Install NSIS installer. Get it from http://nsis.sourceforge.net/Main_Page
Make sure you have the NSIS folder in your path environment variable. 
Download and install Wizou's XML plugin from : http://wiz0u.free.fr/prog/nsisXML/
	-To install the plugin, unzip the nsisXML.dll file from the bin directory into the corresponding directory of your NSIS installation. 

---

*3. Sonic Awe*
*3.1 Get source code*
Go to the same directory as where you put 'sonicawe-winlib' and run the following commands.
<pre>$ git clone git@github.com:reep/sonic.git
$ cd sonic
$ git submodule update ----init
$ cd sonicawe; git pull origin master
$ cd ../gpumisc; git pull origin master
$ cd ..</pre>

*3.2 Creating Visual Studio projects*
The repo contains .pro files for QT QMAKE. To create Visual Studio project files out of these you can 
follow these steps:
<pre>cd /path/to/sonic
cd gpumisc
qmake
cd ../sonicawe
qmake</pre>
This creates Visual C++ project files gpumisc.vcproj and sonicawe.vcproj. These files are linked to by the Visual Studio solution at '/path/to/sonic/sonic.sln'. Note that you need to redo these steps each time a .pro file have changed. Also, project settings are managed through .pro files. Visual Studio project files should be regared as temporary files.

*3.3 Building*
If everything was set up properly you should be able to open up sonic.sln in the sonic folder and build Sonic AWE from its source code.

---

*4. Things to remember*
*4.1 pro-to-vcproj*
You need to redo step 3.2 each time a .pro file have changed.

*4.2 Optional - QT integration into Visual Studio*
Follow the link "here":http://qt.nokia.com/downloads/visual-studio-add-in to download, "here":http://qt.nokia.com/developer/faqs/what-is-the-visual-studio-add-in/view for a FAQ article regarding the plug-in, and "here":http://rajorshi.net/blog/2009/01/using-qt-with-msvc-express-2008/ for a tutorial on how to use it. Note that this doesn't work with the Express version!

---

*5. Packaging the application*
To package a build of Sonic AWE, copy the included libraries and the exe to a folder of your choice. Also include the VS runtime libraries msvcp90d.dll, msvcr90d.dll and the manifest file Microsoft.VC90.DebugCRT.manifest. These should be located in the folder "C:\[Program]\Microsoft Visual Studio 9.0\VC\redist\x86\Microsoft.VC90.CRT".
It should be possible to put this behaviour into the project file but since paths may differ on different computers, this has not been done.

The following dlls should be included in the package:
<pre>cudart.dll
cufft.dll
glew32.dll
glut32.dll
libsndfile-1.dll
msvcp90.dll
msvcr90.dll
QtCore4.dll
QtGuid4.dll
QtOpenGL4.dll
portaudio_x86.dll
</pre>


*5.1 Windows installer*
The creation of the windows installer will be executed automatically at the end of the build. This will create a Soniawe-setup.exe file that can be used directly as release package.
